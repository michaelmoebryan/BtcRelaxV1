<?phpnamespace BtcRelax;use BtcRelax\BookmarkDao;use BtcRelax\Dao\BookmarkSearchCriteria;use BtcRelax\SecureSession;use BtcRelax\Utils;use BtcRelax\Validation\BookmarkValidator;use BtcRelax\OM;                    global $core;                        $status = $core->getSessionState();    $cUser = $core->getUser();    $isActiveBookMark;     if (array_key_exists('getBookmark', $extra))       {                     $om = $core->getOM();           $bookmarkDao = new BookmarkDao();           $bookmark = $bookmarkDao->findById($extra['getBookmark']);           $order = $om->CreateNewOrder($cUser, $bookmark );           // Create order here            $isActiveOrder = true;         }       else       {          $isActiveOrder = actionCheckActiveOrders($cust);        }        $bookmarksList = null;        switch ($status)    {        case SecureSession::STATUS_ROOT:            $header = new LayoutHeader($cust);            actionPrepareStoreFront($cust, $isActiveOrder);            break;        case SecureSession::STATUS_USER:            actionPrepareStoreFront($cust, $isActiveOrder);            break;        case SecureSession::STATUS_GUEST:            Utils::redirect('guest');            break;        default:            Utils::redirect('main');            break;         }    function actionCheckActiveOrders($customer) {        $result = false;        return $result;    }        function actionGetActiveBookmarks() {                        $dao = new \BtcRelax\BookmarkDao();                        $status = BookmarkValidator::validateStatus('Published');                        $search = (new BookmarkSearchCriteria())->setStatus($status);                        $bookmarksList = $dao->find($search);                        return $bookmarksList;    }        function renderGetActiveBookmarks() {        $bList = actionGetActiveBookmarks();        if (empty($bList))        {            $result = "<p>No active bookmarks now!</p>";        }        else        {            	$result = '<div class="container-fluid "><div class="row" >';		$pLang = 'ru';                foreach ($bList as $curPoint) 		{                    $result  .= $curPoint->GetPublicForm($pLang);								 		};					                $result = $result .  '</div></div>';        }        return $result;    }        function renderActiveOrders() {        $result = "<p>Активный заказ по закладке</p>";        return $result;    }    function actionPrepareStoreFront($cust, $isActiveOrder) {        if (isset($cust))           {                if (!$isActiveOrder)                {                          actionGetActiveBookmarks();                };            }    }    //$points = BookmarkFactory::GetActiveBookmarks();        //renderActiveOrders();    